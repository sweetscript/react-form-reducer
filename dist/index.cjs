import React,{useState,useReducer,createContext,useContext}from"react";function _extends(){return _extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},_extends.apply(this,arguments)}var useFormErrors=function(){var e=useState({}),t=e[0],r=e[1],n={errors:t,has:function(e){return t&&!!Object.getOwnPropertyDescriptor(t,e)},hasErrors:function(){return Object.keys(t).length>0},get:function(e){return n.has(e)?t[e]:[]},first:function(e){var r;return!!n.has(e)&&(null==t||null==(r=t[e])?void 0:r[0])},all:function(){return t},add:function(e,o){var s=_extends({},t);n.has(e)||(s[e]=[]),-1===s[e].indexOf(o)&&s[e].push(o),r(s)},set:function(e){r(e)},forget:function(e){if(e){if(t[e]){var o=_extends({},t);delete o[e],r(o)}}else n.hasErrors()&&r({})}};return n};function useForm(e,t){var r=useFormErrors(),n=useState(!1),o=n[0],s=n[1],u=useState(!1),a=u[0],i=u[1],c=useState(1),d=c[0],l=c[1],f=(t||{}).onUpdateFields,v=useReducer(function(e,t){var r=_extends({},e,t);return f&&(r=f(r)),r},e),x=v[0],m=v[1],p=function(e,t){void 0===t&&(t=!0),f&&(e=f(e)),m(e),s(t)},F=function(e,t){var n={};n[e]=t,p(n,!0),r.forget(e)};return{fields:x,setFields:p,setField:F,handleInputChange:function(e){return function(t){var r=t.currentTarget||t.target,n=r.getAttribute("type")||"text";-1!==["checkbox","radio"].indexOf(n)?F(e,r instanceof HTMLInputElement&&r.checked):-1!==["number","range"].indexOf(n)?F(e,Number(r.value)):F(e,r.value)}},reset:function(){p(e,!1)},errors:r,isDirty:o,setIsDirty:s,isBusy:a,setIsBusy:i,step:d,setStep:l,validate:function(e){try{var n=null==t?void 0:t.validation;if(!n)throw new Error("No validator resolver passed");var o=n.validate(x,e);return 1==o?Promise.resolve({passed:!0}):(r.set(o),Promise.resolve({passed:!1,error:o}))}catch(e){return Promise.reject(e)}}}}var _FormContext=/*#__PURE__*/createContext({});function FormContext(){return _FormContext}function FormContextProvider(e){var t=e.children,r=useForm(e.defaultValues,e.options),n=FormContext();/*#__PURE__*/return React.createElement(n.Provider,{value:r},t)}function useFormContext(){return useContext(FormContext())}var ValidationResolver=function(){};export{FormContext,FormContextProvider,ValidationResolver,useForm,useFormContext,useFormErrors};
